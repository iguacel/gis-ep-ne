#!/bin/bash
set -e
set -x

SCALES=("10m" "50m" "110m")

# === Extract Crimea geometry from 10m admin-1 provinces once ===
CRIMEA_GEOM_GPKG="/tmp/ne/crimea_geom.gpkg"
CRIMEA_GEOM_LAYER="crimea_geom"
CRIMEA_BBOX_WKT="/tmp/ne/crimea_bbox.wkt"
if [ ! -f "$CRIMEA_GEOM_GPKG" ]; then
  echo "[STEP] Extracting Crimea geometry from 10m admin-1 provinces..."
  ogr2ogr -f GPKG -a_srs EPSG:4326 -nln $CRIMEA_GEOM_LAYER "$CRIMEA_GEOM_GPKG" \
    /tmp/ne/10m/admin_1_states_provinces/ne_10m_admin_1_states_provinces.shp \
    -dialect sqlite -sql "SELECT * FROM ne_10m_admin_1_states_provinces WHERE adm1_code IN ('RUS-5482', 'RUS-283')"
  ogrinfo -al -so "$CRIMEA_GEOM_GPKG" $CRIMEA_GEOM_LAYER > /dev/null
fi
# Extract Crimea bounding box as WKT POLYGON (for 50m/110m)
echo "[STEP] Extracting Crimea bounding box as WKT..."
BBOX=$(ogrinfo -al -so "$CRIMEA_GEOM_GPKG" $CRIMEA_GEOM_LAYER | awk '/Extent: /{gsub(/[(),]/,""); print $2, $3, $5, $6}')
read MINX MINY MAXX MAXY <<< $BBOX
if (( $(echo "$MINX < 30 || $MINX > 40 || $MAXX < 30 || $MAXX > 40 || $MINY < 40 || $MINY > 50 || $MAXY < 40 || $MAXY > 50 || $MINX >= $MAXX || $MINY >= $MAXY" | bc -l) )); then
  echo "[ERROR] Crimea bbox coordinates look wrong or swapped: MINX=$MINX MINY=$MINY MAXX=$MAXX MAXY=$MAXY" >&2
  exit 1
fi
echo "POLYGON(($MINX $MINY, $MINX $MAXY, $MAXX $MAXY, $MAXX $MINY, $MINX $MINY))" > "$CRIMEA_BBOX_WKT"

CRIMEA_BBOX_GEOJSON="/tmp/ne/crimea_bbox.geojson"
WKT_BBOX=$(sed -E 's/^POLYGON\(\((.*)\)\)$/\1/' "$CRIMEA_BBOX_WKT")
IFS=',' read -r P1 P2 P3 P4 P5 <<< "$WKT_BBOX"
read MINX MINY <<< $(echo $P1)
read _ MAXY <<< $(echo $P2)
read MAXX _ <<< $(echo $P3)
read _ MINY2 <<< $(echo $P4)
if [[ "$MINY" != "$MINY2" ]]; then
  echo "[ERROR] BBOX Y values do not close: MINY=$MINY MINY2=$MINY2" >&2
  exit 1
fi
if [[ -z "$MINX" || -z "$MINY" || -z "$MAXX" || -z "$MAXY" ]]; then
  echo "[ERROR] One or more bbox variables are empty: MINX='$MINX' MINY='$MINY' MAXX='$MAXX' MAXY='$MAXY'" >&2
  echo "[ERROR] Crimea bbox WKT content: $(cat $CRIMEA_BBOX_WKT)" >&2
  exit 1
fi
cat > "$CRIMEA_BBOX_GEOJSON" <<EOF
{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "geometry": {
        "type": "Polygon",
        "coordinates": [[
          [$MINX, $MINY],
          [$MINX, $MAXY],
          [$MAXX, $MAXY],
          [$MAXX, $MINY],
          [$MINX, $MINY]
        ]]
      },
      "properties": {}
    }
  ]
}
EOF
if ! jq empty "$CRIMEA_BBOX_GEOJSON"; then
  echo "[ERROR] Crimea bbox GeoJSON is invalid JSON!" >&2
  cat "$CRIMEA_BBOX_GEOJSON" >&2
  exit 1
fi

for scale in 10m 50m 110m; do
  mkdir -p ./OUTPUT/tmp/$scale/
done

for scale in "${SCALES[@]}"; do
  echo "[STEP] Processing $scale..."
  INPUT_DIR="/tmp/ne/${scale}/admin_0_countries"
  ADMIN1_DIR="/tmp/ne/${scale}/admin_1_states_provinces"
  INPUT_SHAPE="$INPUT_DIR/ne_${scale}_admin_0_countries.shp"
  ADMIN1_SHAPE="$ADMIN1_DIR/ne_${scale}_admin_1_states_provinces.shp"
  OUTDIR_GPKG="./OUTPUT/geopackage/${scale}"
  OUTDIR_GEOJSON="./OUTPUT/geojson/${scale}"
  OUTDIR_SHP="./OUTPUT/shapefile/${scale}"
  TMPDIR="./OUTPUT/tmp/${scale}"
  mkdir -p "$OUTDIR_GPKG" "$OUTDIR_GEOJSON" "$OUTDIR_SHP" "$TMPDIR"

  if [ "$scale" = "110m" ]; then
    OGR_SRS_FLAGS="-a_srs EPSG:4326"
    OGR_SKIPFAIL="-skipfailures"
  else
    OGR_SRS_FLAGS="-t_srs EPSG:4326"
    OGR_SKIPFAIL=""
  fi

  INPUT_GPKG="$TMPDIR/ne_${scale}_admin_0_countries.gpkg"
  ADMIN1_GPKG="$TMPDIR/ne_${scale}_admin_1_states_provinces.gpkg"
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$INPUT_GPKG" "$INPUT_SHAPE"
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$ADMIN1_GPKG" "$ADMIN1_SHAPE"
  OUTBASE="ne_${scale}_admin_0_countries_el_pais"

  # 1. Merge Western Sahara and Morocco
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$TMPDIR/temp_morocco.gpkg" "$INPUT_GPKG" -nln temp_morocco -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries WHERE NAME IN ('Morocco', 'W. Sahara');
"
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$TMPDIR/fused_morocco.gpkg" "$TMPDIR/temp_morocco.gpkg" -nln fused_morocco -dialect sqlite -sql "
SELECT 
  'Morocco' AS NAME,
  'Morocco' AS ADMIN,
  MIN(ISO_A3) AS ISO_A3,
  MIN(ISO_A2) AS ISO_A2,
  MIN(ISO_N3) AS ISO_N3,
  MIN(UN_A3) AS UN_A3,
  MIN(WB_A2) AS WB_A2,
  MIN(WB_A3) AS WB_A3,
  MIN(SU_A3) AS SU_A3,
  MIN(SU_DIF) AS SU_DIF,
  MIN(GU_A3) AS GU_A3,
  MIN(ADM0_A3) AS ADM0_A3,
  MIN(GEOUNIT) AS GEOUNIT,
  MIN(ABBREV) AS ABBREV,
  MIN(POSTAL) AS POSTAL,
  MIN(FORMAL_EN) AS FORMAL_EN,
  MIN(FORMAL_FR) AS FORMAL_FR,
  MIN(NAME_CIAWF) AS NAME_CIAWF,
  MIN(NOTE_ADM0) AS NOTE_ADM0,
  MIN(NOTE_BRK) AS NOTE_BRK,
  MIN(NAME_SORT) AS NAME_SORT,
  MIN(NAME_ALT) AS NAME_ALT,
  MIN(MAPCOLOR7) AS MAPCOLOR7,
  MIN(MAPCOLOR8) AS MAPCOLOR8,
  MIN(MAPCOLOR9) AS MAPCOLOR9,
  MIN(MAPCOLOR13) AS MAPCOLOR13,
  MIN(POP_EST) AS POP_EST,
  MIN(POP_RANK) AS POP_RANK,
  MIN(POP_YEAR) AS POP_YEAR,
  MIN(GDP_MD) AS GDP_MD,
  MIN(GDP_YEAR) AS GDP_YEAR,
  MIN(ECONOMY) AS ECONOMY,
  MIN(INCOME_GRP) AS INCOME_GRP,
  MIN(FIPS_10) AS FIPS_10,
  MIN(WOE_ID) AS WOE_ID,
  MIN(WOE_NOTE) AS WOE_NOTE,
  MIN(ADM0_ISO) AS ADM0_ISO,
  MIN(ADM0_DIFF) AS ADM0_DIFF,
  MIN(ADM0_TLC) AS ADM0_TLC,
  MIN(ADM0_A3_US) AS ADM0_A3_US,
  MIN(ADM0_A3_FR) AS ADM0_A3_FR,
  MIN(ADM0_A3_RU) AS ADM0_A3_RU,
  MIN(ADM0_A3_ES) AS ADM0_A3_ES,
  MIN(ADM0_A3_CN) AS ADM0_A3_CN,
  MIN(ADM0_A3_TW) AS ADM0_A3_TW,
  MIN(ADM0_A3_IN) AS ADM0_A3_IN,
  MIN(ADM0_A3_NP) AS ADM0_A3_NP,
  MIN(ADM0_A3_PK) AS ADM0_A3_PK,
  MIN(ADM0_A3_DE) AS ADM0_A3_DE,
  MIN(ADM0_A3_GB) AS ADM0_A3_GB,
  MIN(ADM0_A3_BR) AS ADM0_A3_BR,
  MIN(ADM0_A3_IL) AS ADM0_A3_IL,
  MIN(ADM0_A3_PS) AS ADM0_A3_PS,
  MIN(ADM0_A3_SA) AS ADM0_A3_SA,
  MIN(ADM0_A3_EG) AS ADM0_A3_EG,
  MIN(ADM0_A3_MA) AS ADM0_A3_MA,
  MIN(ADM0_A3_PT) AS ADM0_A3_PT,
  MIN(ADM0_A3_AR) AS ADM0_A3_AR,
  MIN(ADM0_A3_JP) AS ADM0_A3_JP,
  MIN(ADM0_A3_KO) AS ADM0_A3_KO,
  MIN(ADM0_A3_VN) AS ADM0_A3_VN,
  MIN(ADM0_A3_TR) AS ADM0_A3_TR,
  MIN(ADM0_A3_ID) AS ADM0_A3_ID,
  MIN(ADM0_A3_PL) AS ADM0_A3_PL,
  MIN(ADM0_A3_GR) AS ADM0_A3_GR,
  MIN(ADM0_A3_IT) AS ADM0_A3_IT,
  MIN(ADM0_A3_NL) AS ADM0_A3_NL,
  MIN(ADM0_A3_SE) AS ADM0_A3_SE,
  MIN(ADM0_A3_BD) AS ADM0_A3_BD,
  MIN(ADM0_A3_UA) AS ADM0_A3_UA,
  MIN(ADM0_A3_UN) AS ADM0_A3_UN,
  MIN(ADM0_A3_WB) AS ADM0_A3_WB,
  MIN(CONTINENT) AS CONTINENT,
  MIN(REGION_UN) AS REGION_UN,
  MIN(SUBREGION) AS SUBREGION,
  MIN(REGION_WB) AS REGION_WB,
  MIN(NAME_LEN) AS NAME_LEN,
  MIN(LONG_LEN) AS LONG_LEN,
  MIN(ABBREV_LEN) AS ABBREV_LEN,
  MIN(TINY) AS TINY,
  MIN(HOMEPART) AS HOMEPART,
  MIN(MIN_ZOOM) AS MIN_ZOOM,
  MIN(MIN_LABEL) AS MIN_LABEL,
  MIN(MAX_LABEL) AS MAX_LABEL,
  MIN(LABEL_X) AS LABEL_X,
  MIN(LABEL_Y) AS LABEL_Y,
  MIN(NE_ID) AS NE_ID,
  MIN(WIKIDATAID) AS WIKIDATAID,
  MIN(NAME_AR) AS NAME_AR,
  MIN(NAME_BN) AS NAME_BN,
  MIN(NAME_DE) AS NAME_DE,
  MIN(NAME_EN) AS NAME_EN,
  MIN(NAME_ES) AS NAME_ES,
  MIN(NAME_FA) AS NAME_FA,
  MIN(NAME_FR) AS NAME_FR,
  MIN(NAME_EL) AS NAME_EL,
  MIN(NAME_HE) AS NAME_HE,
  MIN(NAME_HI) AS NAME_HI,
  MIN(NAME_HU) AS NAME_HU,
  MIN(NAME_ID) AS NAME_ID,
  MIN(NAME_IT) AS NAME_IT,
  MIN(NAME_JA) AS NAME_JA,
  MIN(NAME_KO) AS NAME_KO,
  MIN(NAME_NL) AS NAME_NL,
  MIN(NAME_PL) AS NAME_PL,
  MIN(NAME_PT) AS NAME_PT,
  MIN(NAME_RU) AS NAME_RU,
  MIN(NAME_SV) AS NAME_SV,
  MIN(NAME_TR) AS NAME_TR,
  MIN(NAME_UK) AS NAME_UK,
  MIN(NAME_UR) AS NAME_UR,
  MIN(NAME_VI) AS NAME_VI,
  MIN(NAME_ZH) AS NAME_ZH,
  MIN(NAME_ZHT) AS NAME_ZHT,
  MIN(FCLASS_ISO) AS FCLASS_ISO,
  MIN(TLC) AS TLC,
  MIN(TLC_DIFF) AS TLC_DIFF,
  MIN(FCLASS_TLC) AS FCLASS_TLC,
  MIN(FCLASS_US) AS FCLASS_US,
  MIN(FCLASS_FR) AS FCLASS_FR,
  MIN(FCLASS_RU) AS FCLASS_RU,
  MIN(FCLASS_ES) AS FCLASS_ES,
  MIN(FCLASS_CN) AS FCLASS_CN,
  MIN(FCLASS_TW) AS FCLASS_TW,
  MIN(FCLASS_IN) AS FCLASS_IN,
  MIN(FCLASS_NP) AS FCLASS_NP,
  MIN(FCLASS_PK) AS FCLASS_PK,
  MIN(FCLASS_DE) AS FCLASS_DE,
  MIN(FCLASS_GB) AS FCLASS_GB,
  MIN(FCLASS_BR) AS FCLASS_BR,
  MIN(FCLASS_IL) AS FCLASS_IL,
  MIN(FCLASS_PS) AS FCLASS_PS,
  MIN(FCLASS_SA) AS FCLASS_SA,
  MIN(FCLASS_EG) AS FCLASS_EG,
  MIN(FCLASS_MA) AS FCLASS_MA,
  MIN(FCLASS_PT) AS FCLASS_PT,
  MIN(FCLASS_AR) AS FCLASS_AR,
  MIN(FCLASS_JP) AS FCLASS_JP,
  MIN(FCLASS_KO) AS FCLASS_KO,
  MIN(FCLASS_VN) AS FCLASS_VN,
  MIN(FCLASS_TR) AS FCLASS_TR,
  MIN(FCLASS_ID) AS FCLASS_ID,
  MIN(FCLASS_PL) AS FCLASS_PL,
  MIN(FCLASS_GR) AS FCLASS_GR,
  MIN(FCLASS_IT) AS FCLASS_IT,
  MIN(FCLASS_NL) AS FCLASS_NL,
  MIN(FCLASS_SE) AS FCLASS_SE,
  MIN(FCLASS_BD) AS FCLASS_BD,
  MIN(FCLASS_UA) AS FCLASS_UA,
  ST_Union(geom) AS geom 
FROM temp_morocco;
"

  # 2. Merge Baikonur and Kazakhstan
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$TMPDIR/temp_kazakhstan.gpkg" "$INPUT_GPKG" -nln temp_kazakhstan -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries WHERE NAME IN ('Kazakhstan', 'Baikonur');
"
  ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$TMPDIR/fused_kazakhstan.gpkg" "$TMPDIR/temp_kazakhstan.gpkg" -nln fused_kazakhstan -dialect sqlite -sql "
SELECT 
  'Kazakhstan' AS NAME,
  'Kazakhstan' AS ADMIN,
  MIN(ISO_A3) AS ISO_A3,
  MIN(ISO_A2) AS ISO_A2,
  MIN(ISO_N3) AS ISO_N3,
  MIN(UN_A3) AS UN_A3,
  MIN(WB_A2) AS WB_A2,
  MIN(WB_A3) AS WB_A3,
  MIN(SU_A3) AS SU_A3,
  MIN(SU_DIF) AS SU_DIF,
  MIN(GU_A3) AS GU_A3,
  MIN(ADM0_A3) AS ADM0_A3,
  MIN(GEOUNIT) AS GEOUNIT,
  MIN(ABBREV) AS ABBREV,
  MIN(POSTAL) AS POSTAL,
  MIN(FORMAL_EN) AS FORMAL_EN,
  MIN(FORMAL_FR) AS FORMAL_FR,
  MIN(NAME_CIAWF) AS NAME_CIAWF,
  MIN(NOTE_ADM0) AS NOTE_ADM0,
  MIN(NOTE_BRK) AS NOTE_BRK,
  MIN(NAME_SORT) AS NAME_SORT,
  MIN(NAME_ALT) AS NAME_ALT,
  MIN(MAPCOLOR7) AS MAPCOLOR7,
  MIN(MAPCOLOR8) AS MAPCOLOR8,
  MIN(MAPCOLOR9) AS MAPCOLOR9,
  MIN(MAPCOLOR13) AS MAPCOLOR13,
  MIN(POP_EST) AS POP_EST,
  MIN(POP_RANK) AS POP_RANK,
  MIN(POP_YEAR) AS POP_YEAR,
  MIN(GDP_MD) AS GDP_MD,
  MIN(GDP_YEAR) AS GDP_YEAR,
  MIN(ECONOMY) AS ECONOMY,
  MIN(INCOME_GRP) AS INCOME_GRP,
  MIN(FIPS_10) AS FIPS_10,
  MIN(WOE_ID) AS WOE_ID,
  MIN(WOE_NOTE) AS WOE_NOTE,
  MIN(ADM0_ISO) AS ADM0_ISO,
  MIN(ADM0_DIFF) AS ADM0_DIFF,
  MIN(ADM0_TLC) AS ADM0_TLC,
  MIN(ADM0_A3_US) AS ADM0_A3_US,
  MIN(ADM0_A3_FR) AS ADM0_A3_FR,
  MIN(ADM0_A3_RU) AS ADM0_A3_RU,
  MIN(ADM0_A3_ES) AS ADM0_A3_ES,
  MIN(ADM0_A3_CN) AS ADM0_A3_CN,
  MIN(ADM0_A3_TW) AS ADM0_A3_TW,
  MIN(ADM0_A3_IN) AS ADM0_A3_IN,
  MIN(ADM0_A3_NP) AS ADM0_A3_NP,
  MIN(ADM0_A3_PK) AS ADM0_A3_PK,
  MIN(ADM0_A3_DE) AS ADM0_A3_DE,
  MIN(ADM0_A3_GB) AS ADM0_A3_GB,
  MIN(ADM0_A3_BR) AS ADM0_A3_BR,
  MIN(ADM0_A3_IL) AS ADM0_A3_IL,
  MIN(ADM0_A3_PS) AS ADM0_A3_PS,
  MIN(ADM0_A3_SA) AS ADM0_A3_SA,
  MIN(ADM0_A3_EG) AS ADM0_A3_EG,
  MIN(ADM0_A3_MA) AS ADM0_A3_MA,
  MIN(ADM0_A3_PT) AS ADM0_A3_PT,
  MIN(ADM0_A3_AR) AS ADM0_A3_AR,
  MIN(ADM0_A3_JP) AS ADM0_A3_JP,
  MIN(ADM0_A3_KO) AS ADM0_A3_KO,
  MIN(ADM0_A3_VN) AS ADM0_A3_VN,
  MIN(ADM0_A3_TR) AS ADM0_A3_TR,
  MIN(ADM0_A3_ID) AS ADM0_A3_ID,
  MIN(ADM0_A3_PL) AS ADM0_A3_PL,
  MIN(ADM0_A3_GR) AS ADM0_A3_GR,
  MIN(ADM0_A3_IT) AS ADM0_A3_IT,
  MIN(ADM0_A3_NL) AS ADM0_A3_NL,
  MIN(ADM0_A3_SE) AS ADM0_A3_SE,
  MIN(ADM0_A3_BD) AS ADM0_A3_BD,
  MIN(ADM0_A3_UA) AS ADM0_A3_UA,
  MIN(ADM0_A3_UN) AS ADM0_A3_UN,
  MIN(ADM0_A3_WB) AS ADM0_A3_WB,
  MIN(CONTINENT) AS CONTINENT,
  MIN(REGION_UN) AS REGION_UN,
  MIN(SUBREGION) AS SUBREGION,
  MIN(REGION_WB) AS REGION_WB,
  MIN(NAME_LEN) AS NAME_LEN,
  MIN(LONG_LEN) AS LONG_LEN,
  MIN(ABBREV_LEN) AS ABBREV_LEN,
  MIN(TINY) AS TINY,
  MIN(HOMEPART) AS HOMEPART,
  MIN(MIN_ZOOM) AS MIN_ZOOM,
  MIN(MIN_LABEL) AS MIN_LABEL,
  MIN(MAX_LABEL) AS MAX_LABEL,
  MIN(LABEL_X) AS LABEL_X,
  MIN(LABEL_Y) AS LABEL_Y,
  MIN(NE_ID) AS NE_ID,
  MIN(WIKIDATAID) AS WIKIDATAID,
  MIN(NAME_AR) AS NAME_AR,
  MIN(NAME_BN) AS NAME_BN,
  MIN(NAME_DE) AS NAME_DE,
  MIN(NAME_EN) AS NAME_EN,
  MIN(NAME_ES) AS NAME_ES,
  MIN(NAME_FA) AS NAME_FA,
  MIN(NAME_FR) AS NAME_FR,
  MIN(NAME_EL) AS NAME_EL,
  MIN(NAME_HE) AS NAME_HE,
  MIN(NAME_HI) AS NAME_HI,
  MIN(NAME_HU) AS NAME_HU,
  MIN(NAME_ID) AS NAME_ID,
  MIN(NAME_IT) AS NAME_IT,
  MIN(NAME_JA) AS NAME_JA,
  MIN(NAME_KO) AS NAME_KO,
  MIN(NAME_NL) AS NAME_NL,
  MIN(NAME_PL) AS NAME_PL,
  MIN(NAME_PT) AS NAME_PT,
  MIN(NAME_RU) AS NAME_RU,
  MIN(NAME_SV) AS NAME_SV,
  MIN(NAME_TR) AS NAME_TR,
  MIN(NAME_UK) AS NAME_UK,
  MIN(NAME_UR) AS NAME_UR,
  MIN(NAME_VI) AS NAME_VI,
  MIN(NAME_ZH) AS NAME_ZH,
  MIN(NAME_ZHT) AS NAME_ZHT,
  MIN(FCLASS_ISO) AS FCLASS_ISO,
  MIN(TLC) AS TLC,
  MIN(TLC_DIFF) AS TLC_DIFF,
  MIN(FCLASS_TLC) AS FCLASS_TLC,
  MIN(FCLASS_US) AS FCLASS_US,
  MIN(FCLASS_FR) AS FCLASS_FR,
  MIN(FCLASS_RU) AS FCLASS_RU,
  MIN(FCLASS_ES) AS FCLASS_ES,
  MIN(FCLASS_CN) AS FCLASS_CN,
  MIN(FCLASS_TW) AS FCLASS_TW,
  MIN(FCLASS_IN) AS FCLASS_IN,
  MIN(FCLASS_NP) AS FCLASS_NP,
  MIN(FCLASS_PK) AS FCLASS_PK,
  MIN(FCLASS_DE) AS FCLASS_DE,
  MIN(FCLASS_GB) AS FCLASS_GB,
  MIN(FCLASS_BR) AS FCLASS_BR,
  MIN(FCLASS_IL) AS FCLASS_IL,
  MIN(FCLASS_PS) AS FCLASS_PS,
  MIN(FCLASS_SA) AS FCLASS_SA,
  MIN(FCLASS_EG) AS FCLASS_EG,
  MIN(FCLASS_MA) AS FCLASS_MA,
  MIN(FCLASS_PT) AS FCLASS_PT,
  MIN(FCLASS_AR) AS FCLASS_AR,
  MIN(FCLASS_JP) AS FCLASS_JP,
  MIN(FCLASS_KO) AS FCLASS_KO,
  MIN(FCLASS_VN) AS FCLASS_VN,
  MIN(FCLASS_TR) AS FCLASS_TR,
  MIN(FCLASS_ID) AS FCLASS_ID,
  MIN(FCLASS_PL) AS FCLASS_PL,
  MIN(FCLASS_GR) AS FCLASS_GR,
  MIN(FCLASS_IT) AS FCLASS_IT,
  MIN(FCLASS_NL) AS FCLASS_NL,
  MIN(FCLASS_SE) AS FCLASS_SE,
  MIN(FCLASS_BD) AS FCLASS_BD,
  MIN(FCLASS_UA) AS FCLASS_UA,
  ST_Union(geom) AS geom 
FROM temp_kazakhstan;
"

  # 3. Extract Crimea
  mkdir -p "$TMPDIR"
  if [ "$scale" = "10m" ]; then
    ogr2ogr -f GPKG -nlt MULTIPOLYGON $OGR_SRS_FLAGS "$TMPDIR/temp_crimea.gpkg" "$ADMIN1_GPKG" -nln crimea -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_1_states_provinces WHERE adm1_code IN ('RUS-5482', 'RUS-283');
"
    ogrinfo -al -so "$TMPDIR/temp_crimea.gpkg" crimea > /dev/null
  else
    ogr2ogr -f GPKG -nln temp_crimea_bbox $OGR_SRS_FLAGS -makevalid "$TMPDIR/temp_crimea.gpkg" "$CRIMEA_BBOX_GEOJSON"
    ogrinfo -al -so "$TMPDIR/temp_crimea.gpkg" temp_crimea_bbox > /dev/null
  fi

  # 4. Create GPKG with Ukraine + Crimea
  ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/ukraine_and_crimea.gpkg" "$INPUT_GPKG" -nln ukraine -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries WHERE NAME = 'Ukraine';
"
  if [ "$scale" = "10m" ]; then
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/ukraine_and_crimea.gpkg" "$TMPDIR/temp_crimea.gpkg" -update -nln crimea
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/ukraine_plus_crimea.gpkg" "$TMPDIR/ukraine_and_crimea.gpkg" -nln ukraine_plus_crimea -dialect sqlite -sql "
SELECT
  NAME,
  ADMIN,
  ISO_A3,
  ISO_A2,
  ISO_N3,
  UN_A3,
  WB_A2,
  WB_A3,
  SU_A3,
  SU_DIF,
  GU_A3,
  ADM0_A3,
  GEOUNIT,
  ABBREV,
  POSTAL,
  FORMAL_EN,
  FORMAL_FR,
  NAME_CIAWF,
  NOTE_ADM0,
  NOTE_BRK,
  NAME_SORT,
  NAME_ALT,
  MAPCOLOR7,
  MAPCOLOR8,
  MAPCOLOR9,
  MAPCOLOR13,
  POP_EST,
  POP_RANK,
  POP_YEAR,
  GDP_MD,
  GDP_YEAR,
  ECONOMY,
  INCOME_GRP,
  FIPS_10,
  WOE_ID,
  WOE_NOTE,
  ADM0_ISO,
  ADM0_DIFF,
  ADM0_TLC,
  ADM0_A3_US,
  ADM0_A3_FR,
  ADM0_A3_RU,
  ADM0_A3_ES,
  ADM0_A3_CN,
  ADM0_A3_TW,
  ADM0_A3_IN,
  ADM0_A3_NP,
  ADM0_A3_PK,
  ADM0_A3_DE,
  ADM0_A3_GB,
  ADM0_A3_BR,
  ADM0_A3_IL,
  ADM0_A3_PS,
  ADM0_A3_SA,
  ADM0_A3_EG,
  ADM0_A3_MA,
  ADM0_A3_PT,
  ADM0_A3_AR,
  ADM0_A3_JP,
  ADM0_A3_KO,
  ADM0_A3_VN,
  ADM0_A3_TR,
  ADM0_A3_ID,
  ADM0_A3_PL,
  ADM0_A3_GR,
  ADM0_A3_IT,
  ADM0_A3_NL,
  ADM0_A3_SE,
  ADM0_A3_BD,
  ADM0_A3_UA,
  ADM0_A3_UN,
  ADM0_A3_WB,
  CONTINENT,
  REGION_UN,
  SUBREGION,
  REGION_WB,
  NAME_LEN,
  LONG_LEN,
  ABBREV_LEN,
  TINY,
  HOMEPART,
  MIN_ZOOM,
  MIN_LABEL,
  MAX_LABEL,
  LABEL_X,
  LABEL_Y,
  NE_ID,
  WIKIDATAID,
  NAME_AR,
  NAME_BN,
  NAME_DE,
  NAME_EN,
  NAME_ES,
  NAME_FA,
  NAME_FR,
  NAME_EL,
  NAME_HE,
  NAME_HI,
  NAME_HU,
  NAME_ID,
  NAME_IT,
  NAME_JA,
  NAME_KO,
  NAME_NL,
  NAME_PL,
  NAME_PT,
  NAME_RU,
  NAME_SV,
  NAME_TR,
  NAME_UK,
  NAME_UR,
  NAME_VI,
  NAME_ZH,
  NAME_ZHT,
  FCLASS_ISO,
  TLC,
  TLC_DIFF,
  FCLASS_TLC,
  FCLASS_US,
  FCLASS_FR,
  FCLASS_RU,
  FCLASS_ES,
  FCLASS_CN,
  FCLASS_TW,
  FCLASS_IN,
  FCLASS_NP,
  FCLASS_PK,
  FCLASS_DE,
  FCLASS_GB,
  FCLASS_BR,
  FCLASS_IL,
  FCLASS_PS,
  FCLASS_SA,
  FCLASS_EG,
  FCLASS_MA,
  FCLASS_PT,
  FCLASS_AR,
  FCLASS_JP,
  FCLASS_KO,
  FCLASS_VN,
  FCLASS_TR,
  FCLASS_ID,
  FCLASS_PL,
  FCLASS_GR,
  FCLASS_IT,
  FCLASS_NL,
  FCLASS_SE,
  FCLASS_BD,
  FCLASS_UA,
  ST_Union(geom, (SELECT ST_Union(geom) FROM crimea)) AS geom
FROM ukraine;
"
    if [ ! -f "$TMPDIR/ukraine_plus_crimea.gpkg" ]; then
      echo "[ERROR] Failed to create $TMPDIR/ukraine_plus_crimea.gpkg for $scale" >&2
      echo "[ERROR] Available layers in $TMPDIR/ukraine_and_crimea.gpkg:" >&2
      ogrinfo "$TMPDIR/ukraine_and_crimea.gpkg"
      exit 1
    fi
  else
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid -t_srs EPSG:4326 "$TMPDIR/ukraine_and_crimea.gpkg" "$INPUT_GPKG" -nln russia -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries WHERE NAME = 'Russia';
" -update
    ogr2ogr -f GPKG -nlt POLYGON -makevalid -t_srs EPSG:4326 "$TMPDIR/ukraine_and_crimea.gpkg" "$TMPDIR/temp_crimea.gpkg" -nln temp_crimea_bbox -update
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/ukraine_plus_crimea.gpkg" "$TMPDIR/ukraine_and_crimea.gpkg" -nln ukraine_plus_crimea -dialect sqlite -sql "
WITH bbox AS (SELECT geom FROM temp_crimea_bbox),
     russia_geom AS (SELECT geom FROM russia),
     crimea_piece AS (SELECT ST_Union(ST_Intersection(russia_geom.geom, bbox.geom)) AS geom FROM russia_geom, bbox)
SELECT
  NAME,
  ADMIN,
  ISO_A3,
  ISO_A2,
  ISO_N3,
  UN_A3,
  WB_A2,
  WB_A3,
  SU_A3,
  SU_DIF,
  GU_A3,
  ADM0_A3,
  GEOUNIT,
  ABBREV,
  POSTAL,
  FORMAL_EN,
  FORMAL_FR,
  NAME_CIAWF,
  NOTE_ADM0,
  NOTE_BRK,
  NAME_SORT,
  NAME_ALT,
  MAPCOLOR7,
  MAPCOLOR8,
  MAPCOLOR9,
  MAPCOLOR13,
  POP_EST,
  POP_RANK,
  POP_YEAR,
  GDP_MD,
  GDP_YEAR,
  ECONOMY,
  INCOME_GRP,
  FIPS_10,
  WOE_ID,
  WOE_NOTE,
  ADM0_ISO,
  ADM0_DIFF,
  ADM0_TLC,
  ADM0_A3_US,
  ADM0_A3_FR,
  ADM0_A3_RU,
  ADM0_A3_ES,
  ADM0_A3_CN,
  ADM0_A3_TW,
  ADM0_A3_IN,
  ADM0_A3_NP,
  ADM0_A3_PK,
  ADM0_A3_DE,
  ADM0_A3_GB,
  ADM0_A3_BR,
  ADM0_A3_IL,
  ADM0_A3_PS,
  ADM0_A3_SA,
  ADM0_A3_EG,
  ADM0_A3_MA,
  ADM0_A3_PT,
  ADM0_A3_AR,
  ADM0_A3_JP,
  ADM0_A3_KO,
  ADM0_A3_VN,
  ADM0_A3_TR,
  ADM0_A3_ID,
  ADM0_A3_PL,
  ADM0_A3_GR,
  ADM0_A3_IT,
  ADM0_A3_NL,
  ADM0_A3_SE,
  ADM0_A3_BD,
  ADM0_A3_UA,
  ADM0_A3_UN,
  ADM0_A3_WB,
  CONTINENT,
  REGION_UN,
  SUBREGION,
  REGION_WB,
  NAME_LEN,
  LONG_LEN,
  ABBREV_LEN,
  TINY,
  HOMEPART,
  MIN_ZOOM,
  MIN_LABEL,
  MAX_LABEL,
  LABEL_X,
  LABEL_Y,
  NE_ID,
  WIKIDATAID,
  NAME_AR,
  NAME_BN,
  NAME_DE,
  NAME_EN,
  NAME_ES,
  NAME_FA,
  NAME_FR,
  NAME_EL,
  NAME_HE,
  NAME_HI,
  NAME_HU,
  NAME_ID,
  NAME_IT,
  NAME_JA,
  NAME_KO,
  NAME_NL,
  NAME_PL,
  NAME_PT,
  NAME_RU,
  NAME_SV,
  NAME_TR,
  NAME_UK,
  NAME_UR,
  NAME_VI,
  NAME_ZH,
  NAME_ZHT,
  FCLASS_ISO,
  TLC,
  TLC_DIFF,
  FCLASS_TLC,
  FCLASS_US,
  FCLASS_FR,
  FCLASS_RU,
  FCLASS_ES,
  FCLASS_CN,
  FCLASS_TW,
  FCLASS_IN,
  FCLASS_NP,
  FCLASS_PK,
  FCLASS_DE,
  FCLASS_GB,
  FCLASS_BR,
  FCLASS_IL,
  FCLASS_PS,
  FCLASS_SA,
  FCLASS_EG,
  FCLASS_MA,
  FCLASS_PT,
  FCLASS_AR,
  FCLASS_JP,
  FCLASS_KO,
  FCLASS_VN,
  FCLASS_TR,
  FCLASS_ID,
  FCLASS_PL,
  FCLASS_GR,
  FCLASS_IT,
  FCLASS_NL,
  FCLASS_SE,
  FCLASS_BD,
  FCLASS_UA,
  ST_Union(geom, (SELECT geom FROM crimea_piece)) AS geom
FROM ukraine;
"
  fi

  # 5. Remove modified countries
  ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/temp_rest.gpkg" "$INPUT_GPKG" -nln temp_rest -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries
WHERE NAME NOT IN ('Morocco', 'W. Sahara', 'Kazakhstan', 'Baikonur', 'Russia', 'Ukraine');
"

  # 6. Remove Crimea from Russia
  ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/russia_and_crimea.gpkg" "$INPUT_GPKG" -nln russia -dialect sqlite -sql "
SELECT * FROM ne_${scale}_admin_0_countries WHERE NAME = 'Russia';
"
  if [ "$scale" = "10m" ]; then
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/russia_and_crimea.gpkg" "$TMPDIR/temp_crimea.gpkg" -update -nln crimea
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/russia_crimea_removed.gpkg" "$TMPDIR/russia_and_crimea.gpkg" -nln russia_clean -dialect sqlite -sql "
SELECT
  NAME,
  ADMIN,
  ISO_A3,
  ISO_A2,
  ISO_N3,
  UN_A3,
  WB_A2,
  WB_A3,
  SU_A3,
  SU_DIF,
  GU_A3,
  ADM0_A3,
  GEOUNIT,
  ABBREV,
  POSTAL,
  FORMAL_EN,
  FORMAL_FR,
  NAME_CIAWF,
  NOTE_ADM0,
  NOTE_BRK,
  NAME_SORT,
  NAME_ALT,
  MAPCOLOR7,
  MAPCOLOR8,
  MAPCOLOR9,
  MAPCOLOR13,
  POP_EST,
  POP_RANK,
  POP_YEAR,
  GDP_MD,
  GDP_YEAR,
  ECONOMY,
  INCOME_GRP,
  FIPS_10,
  WOE_ID,
  WOE_NOTE,
  ADM0_ISO,
  ADM0_DIFF,
  ADM0_TLC,
  ADM0_A3_US,
  ADM0_A3_FR,
  ADM0_A3_RU,
  ADM0_A3_ES,
  ADM0_A3_CN,
  ADM0_A3_TW,
  ADM0_A3_IN,
  ADM0_A3_NP,
  ADM0_A3_PK,
  ADM0_A3_DE,
  ADM0_A3_GB,
  ADM0_A3_BR,
  ADM0_A3_IL,
  ADM0_A3_PS,
  ADM0_A3_SA,
  ADM0_A3_EG,
  ADM0_A3_MA,
  ADM0_A3_PT,
  ADM0_A3_AR,
  ADM0_A3_JP,
  ADM0_A3_KO,
  ADM0_A3_VN,
  ADM0_A3_TR,
  ADM0_A3_ID,
  ADM0_A3_PL,
  ADM0_A3_GR,
  ADM0_A3_IT,
  ADM0_A3_NL,
  ADM0_A3_SE,
  ADM0_A3_BD,
  ADM0_A3_UA,
  ADM0_A3_UN,
  ADM0_A3_WB,
  CONTINENT,
  REGION_UN,
  SUBREGION,
  REGION_WB,
  NAME_LEN,
  LONG_LEN,
  ABBREV_LEN,
  TINY,
  HOMEPART,
  MIN_ZOOM,
  MIN_LABEL,
  MAX_LABEL,
  LABEL_X,
  LABEL_Y,
  NE_ID,
  WIKIDATAID,
  NAME_AR,
  NAME_BN,
  NAME_DE,
  NAME_EN,
  NAME_ES,
  NAME_FA,
  NAME_FR,
  NAME_EL,
  NAME_HE,
  NAME_HI,
  NAME_HU,
  NAME_ID,
  NAME_IT,
  NAME_JA,
  NAME_KO,
  NAME_NL,
  NAME_PL,
  NAME_PT,
  NAME_RU,
  NAME_SV,
  NAME_TR,
  NAME_UK,
  NAME_UR,
  NAME_VI,
  NAME_ZH,
  NAME_ZHT,
  FCLASS_ISO,
  TLC,
  TLC_DIFF,
  FCLASS_TLC,
  FCLASS_US,
  FCLASS_FR,
  FCLASS_RU,
  FCLASS_ES,
  FCLASS_CN,
  FCLASS_TW,
  FCLASS_IN,
  FCLASS_NP,
  FCLASS_PK,
  FCLASS_DE,
  FCLASS_GB,
  FCLASS_BR,
  FCLASS_IL,
  FCLASS_PS,
  FCLASS_SA,
  FCLASS_EG,
  FCLASS_MA,
  FCLASS_PT,
  FCLASS_AR,
  FCLASS_JP,
  FCLASS_KO,
  FCLASS_VN,
  FCLASS_TR,
  FCLASS_ID,
  FCLASS_PL,
  FCLASS_GR,
  FCLASS_IT,
  FCLASS_NL,
  FCLASS_SE,
  FCLASS_BD,
  FCLASS_UA,
  ST_Difference(geom, (SELECT ST_Union(geom) FROM crimea)) AS geom
FROM russia;
"
  else
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/russia_and_crimea.gpkg" "$TMPDIR/temp_crimea.gpkg" -update -nln temp_crimea_bbox
    ogr2ogr -f GPKG -nlt MULTIPOLYGON -makevalid $OGR_SRS_FLAGS "$TMPDIR/russia_crimea_removed.gpkg" "$TMPDIR/russia_and_crimea.gpkg" -nln russia_clean -dialect sqlite -sql "
SELECT
  NAME,
  ADMIN,
  ISO_A3,
  ISO_A2,
  ISO_N3,
  UN_A3,
  WB_A2,
  WB_A3,
  SU_A3,
  SU_DIF,
  GU_A3,
  ADM0_A3,
  GEOUNIT,
  ABBREV,
  POSTAL,
  FORMAL_EN,
  FORMAL_FR,
  NAME_CIAWF,
  NOTE_ADM0,
  NOTE_BRK,
  NAME_SORT,
  NAME_ALT,
  MAPCOLOR7,
  MAPCOLOR8,
  MAPCOLOR9,
  MAPCOLOR13,
  POP_EST,
  POP_RANK,
  POP_YEAR,
  GDP_MD,
  GDP_YEAR,
  ECONOMY,
  INCOME_GRP,
  FIPS_10,
  WOE_ID,
  WOE_NOTE,
  ADM0_ISO,
  ADM0_DIFF,
  ADM0_TLC,
  ADM0_A3_US,
  ADM0_A3_FR,
  ADM0_A3_RU,
  ADM0_A3_ES,
  ADM0_A3_CN,
  ADM0_A3_TW,
  ADM0_A3_IN,
  ADM0_A3_NP,
  ADM0_A3_PK,
  ADM0_A3_DE,
  ADM0_A3_GB,
  ADM0_A3_BR,
  ADM0_A3_IL,
  ADM0_A3_PS,
  ADM0_A3_SA,
  ADM0_A3_EG,
  ADM0_A3_MA,
  ADM0_A3_PT,
  ADM0_A3_AR,
  ADM0_A3_JP,
  ADM0_A3_KO,
  ADM0_A3_VN,
  ADM0_A3_TR,
  ADM0_A3_ID,
  ADM0_A3_PL,
  ADM0_A3_GR,
  ADM0_A3_IT,
  ADM0_A3_NL,
  ADM0_A3_SE,
  ADM0_A3_BD,
  ADM0_A3_UA,
  ADM0_A3_UN,
  ADM0_A3_WB,
  CONTINENT,
  REGION_UN,
  SUBREGION,
  REGION_WB,
  NAME_LEN,
  LONG_LEN,
  ABBREV_LEN,
  TINY,
  HOMEPART,
  MIN_ZOOM,
  MIN_LABEL,
  MAX_LABEL,
  LABEL_X,
  LABEL_Y,
  NE_ID,
  WIKIDATAID,
  NAME_AR,
  NAME_BN,
  NAME_DE,
  NAME_EN,
  NAME_ES,
  NAME_FA,
  NAME_FR,
  NAME_EL,
  NAME_HE,
  NAME_HI,
  NAME_HU,
  NAME_ID,
  NAME_IT,
  NAME_JA,
  NAME_KO,
  NAME_NL,
  NAME_PL,
  NAME_PT,
  NAME_RU,
  NAME_SV,
  NAME_TR,
  NAME_UK,
  NAME_UR,
  NAME_VI,
  NAME_ZH,
  NAME_ZHT,
  FCLASS_ISO,
  TLC,
  TLC_DIFF,
  FCLASS_TLC,
  FCLASS_US,
  FCLASS_FR,
  FCLASS_RU,
  FCLASS_ES,
  FCLASS_CN,
  FCLASS_TW,
  FCLASS_IN,
  FCLASS_NP,
  FCLASS_PK,
  FCLASS_DE,
  FCLASS_GB,
  FCLASS_BR,
  FCLASS_IL,
  FCLASS_PS,
  FCLASS_SA,
  FCLASS_EG,
  FCLASS_MA,
  FCLASS_PT,
  FCLASS_AR,
  FCLASS_JP,
  FCLASS_KO,
  FCLASS_VN,
  FCLASS_TR,
  FCLASS_ID,
  FCLASS_PL,
  FCLASS_GR,
  FCLASS_IT,
  FCLASS_NL,
  FCLASS_SE,
  FCLASS_BD,
  FCLASS_UA,
  ST_Difference(geom, (SELECT ST_Union(geom) FROM temp_crimea_bbox)) AS geom
FROM russia;
"
  fi

  # 7. Merge all into final GPKG
  FINAL_GPKG="$OUTDIR_GPKG/${OUTBASE}.gpkg"
  ogrmerge.py \
    -f GPKG \
    -single \
    -nln ${OUTBASE} \
    -o "$FINAL_GPKG" \
    $OGR_SKIPFAIL \
    "$TMPDIR/temp_rest.gpkg" \
    "$TMPDIR/russia_crimea_removed.gpkg" \
    "$TMPDIR/fused_morocco.gpkg" \
    "$TMPDIR/fused_kazakhstan.gpkg" \
    "$TMPDIR/ukraine_plus_crimea.gpkg"

  # 8. Export to GeoJSON
  ogr2ogr -f GeoJSON -t_srs EPSG:4326 $OGR_SKIPFAIL "$OUTDIR_GEOJSON/${OUTBASE}.geojson" "$FINAL_GPKG" ${OUTBASE}

  # 9. Export to Shapefile
  ogr2ogr -f "ESRI Shapefile" -lco ENCODING=UTF-8 -nlt MULTIPOLYGON -t_srs EPSG:4326 $OGR_SKIPFAIL "$OUTDIR_SHP/${OUTBASE}_shp" "$FINAL_GPKG" ${OUTBASE}

  echo "[DONE] $scale processed: $FINAL_GPKG"
done

echo "[ALL DONE] All scales processed successfully."